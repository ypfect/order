#docker.host=192.168.159.131
docker.host=aliyun
server.port=6687
regCenter.serverList=${docker.host}:2181
regCenter.namespace=elastic-job-lite
slave.enable=true
#logging.level.root=debug
# dubbo扫描的包，直接提供服务。  @Reference 直接标记为消费者
dubbo.scan.base-packages=com.overstar.order.service
# Dubbo Protocol
dubbo.protocol.name=dubbo
## Random port
dubbo.protocol.port=-1
dubbo.provider.filter=tracing
dubbo.consumer.filter=tracing
dubbo.consumer.check=false
## Dubbo Registry
dubbo.registry.address=nacos://aliyun:8848
# Dubbo Application
dubbo.application.name=test-order
#Redisson 配置
spring.redis.database=0
spring.redis.host=${docker.host}
spring.redis.port=6379
spring.redis.password=changeme

#rocketMq
rocketmq.name-server=${docker.host}:9876
rocketmq.producer.group=test-order

dataflow-job.enable=false
simpleJob.cron=0/5 * * * * ?
simpleJob.shardingTotalCount=1
simpleJob.shardingItemParameters=

spring.datasource.druid.url=jdbc:mysql://${docker.host}:3306/overstar_order?useUnicode=true&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF8&connectTimeout=1000&socketTimeout=3000&allowMultiQueries=true
spring.datasource.druid.username=root
spring.datasource.druid.password=changeme
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-wait=60000
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.filters=config,stat

